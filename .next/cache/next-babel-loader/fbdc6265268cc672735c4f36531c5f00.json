{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\test\\\\interview-fullstack-master\\\\components\\\\MatrixTable\\\\index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport classnames from 'classnames';\nimport { useContext } from 'react';\nimport { MatrixTableContext, MatrixTableContextProvider } from './context';\n\n/**\n * Add 4 buttons: \n * - Cancel to reset the matrix to how it was before changing the values (only when in edit mode)\n * - Edit to make the fields editable (only when not in edit mode)\n * - Clear to completely clear the table\n * - Save to save the table\n * @param param0 \n */\nconst MatrixTable = (_ref) => {\n  let {\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  console.log('className ====> ', className); // State ------------------------------------------------------------------- //\n\n  const {\n    0: {\n      matrix\n    },\n    1: dispatch\n  } = useContext(MatrixTableContext); // Handlers ---------------------------------------------------------------- //\n  // You can save (to api) the matrix here. Remember to update originalMatrix when done.\n\n  const save = async () => {\n    console.log('eeeeeeeeee');\n  }; // Effects ----------------------------------------------------------------- //\n  // Rendering --------------------------------------------------------------- //\n\n\n  return __jsx(\"div\", _extends({}, props, {\n    className: \"jsx-903402690\" + \" \" + (props && props.className != null && props.className || classnames(['container', className]) || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    onClick: save,\n    className: \"jsx-903402690\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Save\"), __jsx(\"br\", {\n    className: \"jsx-903402690\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    className: \"jsx-903402690\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), \"36months lite:\", __jsx(\"input\", {\n    value: matrix[\"36months\"].lite || '',\n    type: \"text\",\n    onChange: e => dispatch({\n      type: 'SOME_ACTION',\n      payload: e.target.value\n    }),\n    className: \"jsx-903402690\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"903402690\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxEb3dubG9hZFxcdGVzdFxcaW50ZXJ2aWV3LWZ1bGxzdGFjay1tYXN0ZXJcXGNvbXBvbmVudHNcXE1hdHJpeFRhYmxlXFxpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkNrQiIsImZpbGUiOiJEOlxcRG93bmxvYWRcXHRlc3RcXGludGVydmlldy1mdWxsc3RhY2stbWFzdGVyXFxjb21wb25lbnRzXFxNYXRyaXhUYWJsZVxcaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IE1hdHJpeFRhYmxlQ29udGV4dCwgTWF0cml4VGFibGVDb250ZXh0UHJvdmlkZXIgfSBmcm9tICcuL2NvbnRleHQnXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGluaXRpYWxNYXRyaXg/OiBpbXBvcnQoJy4uLy4uL3R5cGVzJykuTWF0cml4XG59ICYgaW1wb3J0KCdyZWFjdCcpLkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxuXG4vKipcbiAqIEFkZCA0IGJ1dHRvbnM6IFxuICogLSBDYW5jZWwgdG8gcmVzZXQgdGhlIG1hdHJpeCB0byBob3cgaXQgd2FzIGJlZm9yZSBjaGFuZ2luZyB0aGUgdmFsdWVzIChvbmx5IHdoZW4gaW4gZWRpdCBtb2RlKVxuICogLSBFZGl0IHRvIG1ha2UgdGhlIGZpZWxkcyBlZGl0YWJsZSAob25seSB3aGVuIG5vdCBpbiBlZGl0IG1vZGUpXG4gKiAtIENsZWFyIHRvIGNvbXBsZXRlbHkgY2xlYXIgdGhlIHRhYmxlXG4gKiAtIFNhdmUgdG8gc2F2ZSB0aGUgdGFibGVcbiAqIEBwYXJhbSBwYXJhbTAgXG4gKi9cbmNvbnN0IE1hdHJpeFRhYmxlOiBpbXBvcnQoJ3JlYWN0JykuRkM8T21pdDxQcm9wcywgJ2luaXRpYWxNYXRyaXgnPj4gPSAoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PiB7XG4gIGNvbnNvbGUubG9nKCdjbGFzc05hbWUgPT09PT4gJywgY2xhc3NOYW1lKVxuICAvLyBTdGF0ZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG4gIGNvbnN0IFt7IG1hdHJpeCB9LCBkaXNwYXRjaF0gPSB1c2VDb250ZXh0KE1hdHJpeFRhYmxlQ29udGV4dClcblxuICAvLyBIYW5kbGVycyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG4gIC8vIFlvdSBjYW4gc2F2ZSAodG8gYXBpKSB0aGUgbWF0cml4IGhlcmUuIFJlbWVtYmVyIHRvIHVwZGF0ZSBvcmlnaW5hbE1hdHJpeCB3aGVuIGRvbmUuXG4gIGNvbnN0IHNhdmUgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2VlZWVlZWVlZWUnKVxuICB9XG5cbiAgLy8gRWZmZWN0cyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gIC8vIFJlbmRlcmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NuYW1lcyhbJ2NvbnRhaW5lcicsIGNsYXNzTmFtZV0pfSB7Li4ucHJvcHN9PlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtzYXZlfT5TYXZlPC9idXR0b24+XG4gICAgICA8YnIgLz5cbiAgICAgIDxiciAvPlxuXG4gICAgICAzNm1vbnRocyBsaXRlOlxuICAgICAgPGlucHV0IFxuICAgICAgICB2YWx1ZT17bWF0cml4W1wiMzZtb250aHNcIl0ubGl0ZSB8fCAnJ31cbiAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICBvbkNoYW5nZT17KGUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiAnU09NRV9BQ1RJT04nLFxuICAgICAgICAgIHBheWxvYWQ6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pfSAvPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gIClcbn1cblxuY29uc3QgTWF0cml4VGFibGVXaXRoQ29udGV4dDogaW1wb3J0KCdyZWFjdCcpLkZDPFByb3BzPiA9ICh7IGluaXRpYWxNYXRyaXgsIC4uLnByb3BzIH0pID0+IHtcbiAgLy8gWW91IGNhbiBmZXRjaCB0aGUgcHJpY2luZyBoZXJlIG9yIGluIHBhZ2VzL2luZGV4LnRzXG4gIC8vIFJlbWVtYmVyIHRoYXQgeW91IHNob3VsZCB0cnkgdG8gcmVmbGVjdCB0aGUgc3RhdGUgb2YgcHJpY2luZyBpbiBvcmlnaW5hbE1hdHJpeC5cbiAgLy8gbWF0cml4IHdpbGwgaG9sZCB0aGUgbGF0ZXN0IHZhbHVlIChlZGl0ZWQgb3Igc2FtZSBhcyBvcmlnaW5hbE1hdHJpeClcbiAgY29uc29sZS5sb2coJ2luaXRpYWxNYXRyaXggPT09PT09PT09PT0+ICcsIGluaXRpYWxNYXRyaXgpXG4gIHJldHVybiAoXG4gICAgPE1hdHJpeFRhYmxlQ29udGV4dFByb3ZpZGVyIGluaXRpYWxNYXRyaXg9e2luaXRpYWxNYXRyaXh9PlxuICAgICAgPE1hdHJpeFRhYmxlIHsuLi5wcm9wc30gLz5cbiAgICA8L01hdHJpeFRhYmxlQ29udGV4dFByb3ZpZGVyPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1hdHJpeFRhYmxlV2l0aENvbnRleHRcbiJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\Download\\\\\\\\test\\\\\\\\interview-fullstack-master\\\\\\\\components\\\\\\\\MatrixTable\\\\\\\\index.tsx */\"));\n};\n\nconst MatrixTableWithContext = (_ref2) => {\n  let {\n    initialMatrix\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"initialMatrix\"]);\n\n  // You can fetch the pricing here or in pages/index.ts\n  // Remember that you should try to reflect the state of pricing in originalMatrix.\n  // matrix will hold the latest value (edited or same as originalMatrix)\n  console.log('initialMatrix ===========> ', initialMatrix);\n  return __jsx(MatrixTableContextProvider, {\n    initialMatrix: initialMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(MatrixTable, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default MatrixTableWithContext;","map":{"version":3,"sources":["D:/Download/test/interview-fullstack-master/components/MatrixTable/index.tsx"],"names":["classnames","useContext","MatrixTableContext","MatrixTableContextProvider","MatrixTable","className","children","props","console","log","matrix","dispatch","save","lite","e","type","payload","target","value","MatrixTableWithContext","initialMatrix"],"mappings":";;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,EAA6BC,0BAA7B,QAA+D,WAA/D;;AAMA;;;;;;;;AAQA,MAAMC,WAA6D,GAAG,UAAuC;AAAA,MAAtC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAsC;AAAA,MAAZC,KAAY;;AAC3GC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,SAAhC,EAD2G,CAE3G;;AACA,QAAM;AAAA,OAAC;AAAEK,MAAAA;AAAF,KAAD;AAAA,OAAaC;AAAb,MAAyBV,UAAU,CAACC,kBAAD,CAAzC,CAH2G,CAK3G;AACA;;AACA,QAAMU,IAAI,GAAG,YAAY;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD,CAP2G,CAW3G;AAEA;;;AACA,SACE,0BAA0DF,KAA1D;AAAA,+FAAgBP,UAAU,CAAC,CAAC,WAAD,EAAcK,SAAd,CAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAQ,IAAA,OAAO,EAAEO,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,oBAME;AACE,IAAA,KAAK,EAAEF,MAAM,CAAC,UAAD,CAAN,CAAmBG,IAAnB,IAA2B,EADpC;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAGC,CAAD,IAAOH,QAAQ,CAAC;AACxBI,MAAAA,IAAI,EAAE,aADkB;AAExBC,MAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AAFM,KAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF;AAAA;AAAA;AAAA,+jHADF;AAsBD,CApCD;;AAsCA,MAAMC,sBAAiD,GAAG,WAAiC;AAAA,MAAhC;AAAEC,IAAAA;AAAF,GAAgC;AAAA,MAAZb,KAAY;;AACzF;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CW,aAA3C;AACA,SACE,MAAC,0BAAD;AAA4B,IAAA,aAAa,EAAEA,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD,eAAiBb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAVD;;AAYA,eAAeY,sBAAf","sourcesContent":["import classnames from 'classnames'\nimport { useContext } from 'react'\nimport { MatrixTableContext, MatrixTableContextProvider } from './context'\n\ntype Props = {\n  initialMatrix?: import('../../types').Matrix\n} & import('react').HTMLAttributes<HTMLDivElement>\n\n/**\n * Add 4 buttons: \n * - Cancel to reset the matrix to how it was before changing the values (only when in edit mode)\n * - Edit to make the fields editable (only when not in edit mode)\n * - Clear to completely clear the table\n * - Save to save the table\n * @param param0 \n */\nconst MatrixTable: import('react').FC<Omit<Props, 'initialMatrix'>> = ({ className, children, ...props }) => {\n  console.log('className ====> ', className)\n  // State ------------------------------------------------------------------- //\n  const [{ matrix }, dispatch] = useContext(MatrixTableContext)\n\n  // Handlers ---------------------------------------------------------------- //\n  // You can save (to api) the matrix here. Remember to update originalMatrix when done.\n  const save = async () => {\n    console.log('eeeeeeeeee')\n  }\n\n  // Effects ----------------------------------------------------------------- //\n\n  // Rendering --------------------------------------------------------------- //\n  return (\n    <div className={classnames(['container', className])} {...props}>\n      <button onClick={save}>Save</button>\n      <br />\n      <br />\n\n      36months lite:\n      <input \n        value={matrix[\"36months\"].lite || ''}\n        type=\"text\"\n        onChange={(e) => dispatch({\n          type: 'SOME_ACTION',\n          payload: e.target.value\n        })} />\n\n      <style jsx>{`\n        .container {\n          \n        }\n      `}</style>\n    </div>\n  )\n}\n\nconst MatrixTableWithContext: import('react').FC<Props> = ({ initialMatrix, ...props }) => {\n  // You can fetch the pricing here or in pages/index.ts\n  // Remember that you should try to reflect the state of pricing in originalMatrix.\n  // matrix will hold the latest value (edited or same as originalMatrix)\n  console.log('initialMatrix ===========> ', initialMatrix)\n  return (\n    <MatrixTableContextProvider initialMatrix={initialMatrix}>\n      <MatrixTable {...props} />\n    </MatrixTableContextProvider>\n  )\n}\n\nexport default MatrixTableWithContext\n"]},"metadata":{},"sourceType":"module"}